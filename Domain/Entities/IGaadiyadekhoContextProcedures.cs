// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Domain.Entities;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Domain.Entities
{
    public partial interface IGaadiyadekhoContextProcedures
    {
        Task<List<actionVehicleResult>> actionVehicleAsync(int? EventID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AllLiveBidsResult>> AllLiveBidsAsync(int? eventID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AllLiveBids1Result>> AllLiveBids1Async(int? eventID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<alloldvehcileanylysisResult>> alloldvehcileanylysisAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_AnyDataInTablesResult>> aspnet_AnyDataInTablesAsync(int? TablesToCheck, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Applications_CreateApplicationAsync(string ApplicationName, OutputParameter<Guid?> ApplicationId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_CheckSchemaVersionAsync(string Feature, string CompatibleSchemaVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Membership_ChangePasswordQuestionAndAnswerAsync(string ApplicationName, string UserName, string NewPasswordQuestion, string NewPasswordAnswer, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Membership_CreateUserAsync(string ApplicationName, string UserName, string Password, string PasswordSalt, string Email, string PasswordQuestion, string PasswordAnswer, bool? IsApproved, DateTime? CurrentTimeUtc, DateTime? CreateDate, int? UniqueEmail, int? PasswordFormat, OutputParameter<Guid?> UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Membership_FindUsersByEmailResult>> aspnet_Membership_FindUsersByEmailAsync(string ApplicationName, string EmailToMatch, int? PageIndex, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Membership_FindUsersByNameResult>> aspnet_Membership_FindUsersByNameAsync(string ApplicationName, string UserNameToMatch, int? PageIndex, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Membership_GetAllUsersResult>> aspnet_Membership_GetAllUsersAsync(string ApplicationName, int? PageIndex, int? PageSize, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Membership_GetNumberOfUsersOnlineAsync(string ApplicationName, int? MinutesSinceLastInActive, DateTime? CurrentTimeUtc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Membership_GetPasswordResult>> aspnet_Membership_GetPasswordAsync(string ApplicationName, string UserName, int? MaxInvalidPasswordAttempts, int? PasswordAttemptWindow, DateTime? CurrentTimeUtc, string PasswordAnswer, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Membership_GetPasswordWithFormatResult>> aspnet_Membership_GetPasswordWithFormatAsync(string ApplicationName, string UserName, bool? UpdateLastLoginActivityDate, DateTime? CurrentTimeUtc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Membership_GetUserByEmailResult>> aspnet_Membership_GetUserByEmailAsync(string ApplicationName, string Email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Membership_GetUserByNameResult>> aspnet_Membership_GetUserByNameAsync(string ApplicationName, string UserName, DateTime? CurrentTimeUtc, bool? UpdateLastActivity, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Membership_GetUserByUserIdResult>> aspnet_Membership_GetUserByUserIdAsync(Guid? UserId, DateTime? CurrentTimeUtc, bool? UpdateLastActivity, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Membership_ResetPasswordAsync(string ApplicationName, string UserName, string NewPassword, int? MaxInvalidPasswordAttempts, int? PasswordAttemptWindow, string PasswordSalt, DateTime? CurrentTimeUtc, int? PasswordFormat, string PasswordAnswer, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Membership_SetPasswordAsync(string ApplicationName, string UserName, string NewPassword, string PasswordSalt, DateTime? CurrentTimeUtc, int? PasswordFormat, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Membership_UnlockUserAsync(string ApplicationName, string UserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Membership_UpdateUserAsync(string ApplicationName, string UserName, string Email, string Comment, bool? IsApproved, DateTime? LastLoginDate, DateTime? LastActivityDate, int? UniqueEmail, DateTime? CurrentTimeUtc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Membership_UpdateUserInfoAsync(string ApplicationName, string UserName, bool? IsPasswordCorrect, bool? UpdateLastLoginActivityDate, int? MaxInvalidPasswordAttempts, int? PasswordAttemptWindow, DateTime? CurrentTimeUtc, DateTime? LastLoginDate, DateTime? LastActivityDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Paths_CreatePathAsync(Guid? ApplicationId, string Path, OutputParameter<Guid?> PathId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Personalization_GetApplicationIdAsync(string ApplicationName, OutputParameter<Guid?> ApplicationId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_PersonalizationAdministration_DeleteAllStateAsync(bool? AllUsersScope, string ApplicationName, OutputParameter<int?> Count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_PersonalizationAdministration_FindStateResult>> aspnet_PersonalizationAdministration_FindStateAsync(bool? AllUsersScope, string ApplicationName, int? PageIndex, int? PageSize, string Path, string UserName, DateTime? InactiveSinceDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_PersonalizationAdministration_GetCountOfStateAsync(bool? AllUsersScope, string ApplicationName, string Path, string UserName, DateTime? InactiveSinceDate, OutputParameter<int?> Count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_PersonalizationAdministration_ResetSharedStateAsync(string ApplicationName, string Path, OutputParameter<int?> Count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_PersonalizationAdministration_ResetUserStateAsync(string ApplicationName, DateTime? InactiveSinceDate, string UserName, string Path, OutputParameter<int?> Count, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_PersonalizationAllUsers_GetPageSettingsResult>> aspnet_PersonalizationAllUsers_GetPageSettingsAsync(string ApplicationName, string Path, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_PersonalizationAllUsers_ResetPageSettingsAsync(string ApplicationName, string Path, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_PersonalizationAllUsers_SetPageSettingsAsync(string ApplicationName, string Path, byte[] PageSettings, DateTime? CurrentTimeUtc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_PersonalizationPerUser_GetPageSettingsResult>> aspnet_PersonalizationPerUser_GetPageSettingsAsync(string ApplicationName, string UserName, string Path, DateTime? CurrentTimeUtc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_PersonalizationPerUser_ResetPageSettingsAsync(string ApplicationName, string UserName, string Path, DateTime? CurrentTimeUtc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_PersonalizationPerUser_SetPageSettingsAsync(string ApplicationName, string UserName, string Path, byte[] PageSettings, DateTime? CurrentTimeUtc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Profile_DeleteInactiveProfilesResult>> aspnet_Profile_DeleteInactiveProfilesAsync(string ApplicationName, int? ProfileAuthOptions, DateTime? InactiveSinceDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Profile_DeleteProfilesResult>> aspnet_Profile_DeleteProfilesAsync(string ApplicationName, string UserNames, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Profile_GetNumberOfInactiveProfilesResult>> aspnet_Profile_GetNumberOfInactiveProfilesAsync(string ApplicationName, int? ProfileAuthOptions, DateTime? InactiveSinceDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Profile_GetProfilesResult>> aspnet_Profile_GetProfilesAsync(string ApplicationName, int? ProfileAuthOptions, int? PageIndex, int? PageSize, string UserNameToMatch, DateTime? InactiveSinceDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Profile_GetPropertiesResult>> aspnet_Profile_GetPropertiesAsync(string ApplicationName, string UserName, DateTime? CurrentTimeUtc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Profile_SetPropertiesAsync(string ApplicationName, string PropertyNames, string PropertyValuesString, byte[] PropertyValuesBinary, string UserName, bool? IsUserAnonymous, DateTime? CurrentTimeUtc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_RegisterSchemaVersionAsync(string Feature, string CompatibleSchemaVersion, bool? IsCurrentVersion, bool? RemoveIncompatibleSchema, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Roles_CreateRoleAsync(string ApplicationName, string RoleName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Roles_DeleteRoleAsync(string ApplicationName, string RoleName, bool? DeleteOnlyIfRoleIsEmpty, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Roles_GetAllRolesResult>> aspnet_Roles_GetAllRolesAsync(string ApplicationName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Roles_RoleExistsAsync(string ApplicationName, string RoleName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Setup_RemoveAllRoleMembersResult>> aspnet_Setup_RemoveAllRoleMembersAsync(string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_Setup_RestorePermissionsResult>> aspnet_Setup_RestorePermissionsAsync(string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_UnRegisterSchemaVersionAsync(string Feature, string CompatibleSchemaVersion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Users_CreateUserAsync(Guid? ApplicationId, string UserName, bool? IsUserAnonymous, DateTime? LastActivityDate, OutputParameter<Guid?> UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_Users_DeleteUserAsync(string ApplicationName, string UserName, int? TablesToDeleteFrom, OutputParameter<int?> NumTablesDeletedFrom, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_UsersInRoles_AddUsersToRolesResult>> aspnet_UsersInRoles_AddUsersToRolesAsync(string ApplicationName, string UserNames, string RoleNames, DateTime? CurrentTimeUtc, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_UsersInRoles_FindUsersInRoleResult>> aspnet_UsersInRoles_FindUsersInRoleAsync(string ApplicationName, string RoleName, string UserNameToMatch, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_UsersInRoles_GetRolesForUserResult>> aspnet_UsersInRoles_GetRolesForUserAsync(string ApplicationName, string UserName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_UsersInRoles_GetUsersInRolesResult>> aspnet_UsersInRoles_GetUsersInRolesAsync(string ApplicationName, string RoleName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_UsersInRoles_IsUserInRoleAsync(string ApplicationName, string UserName, string RoleName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<aspnet_UsersInRoles_RemoveUsersFromRolesResult>> aspnet_UsersInRoles_RemoveUsersFromRolesAsync(string ApplicationName, string UserNames, string RoleNames, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> aspnet_WebEvent_LogEventAsync(string EventId, DateTime? EventTimeUtc, DateTime? EventTime, string EventType, decimal? EventSequence, decimal? EventOccurrence, int? EventCode, int? EventDetailCode, string Message, string ApplicationPath, string ApplicationVirtualPath, string MachineName, string RequestUrl, string ExceptionType, string Details, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BidsDocumentsPendingResult>> BidsDocumentsPendingAsync(int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<checkdealerbycityResult>> checkdealerbycityAsync(int? cityid, string name, string email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<fancynumberopen_forResult>> fancynumberopen_forAsync(int? oprtion, int? stateid, int? districtid, int? cityid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<fancynumberopen_forwithpriceResult>> fancynumberopen_forwithpriceAsync(int? oprtion, int? stateid, int? districtid, int? cityid, string open_for, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getallapprovedbidsResult>> getallapprovedbidsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllCitiesResult>> GetAllCitiesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllCitiesNameResult>> GetAllCitiesNameAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllCityResult>> GetAllCityAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllDealerAllOldvecResult>> GetAllDealerAllOldvecAsync(int? fromrow, int? torow, string opration, string userroleid, string opratiionquery, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getalleventvecResult>> getalleventvecAsync(int? eventid, int? fromrow, string userid, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getalleventvec1Result>> getalleventvec1Async(int? eventid, int? fromrow, string userid, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getalleventvecwhishResult>> getalleventvecwhishAsync(int? eventid, int? fromrow, string userid, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllNewbrandsByCatdidResult>> GetAllNewbrandsByCatdidAsync(int? CatID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllNewvecResult>> GetAllNewvecAsync(int? fromrow, int? torow, string opration, string opratiionquery, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllnewVECNAMEResult>> GetAllnewVECNAMEAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllNewVehicleCategoryResult>> GetAllNewVehicleCategoryAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllOldvecResult>> GetAllOldvecAsync(int? fromrow, int? torow, string opration, string opratiionquery, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getallrcvecbidsResult>> getallrcvecbidsAsync(string biduserid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getallrcvecbidsdocbyvecidResult>> getallrcvecbidsdocbyvecidAsync(string biduserid, int? VehicleID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllVECNAMEResult>> GetAllVECNAMEAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getAllwinbidsResult>> getAllwinbidsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getapprovedbidsResult>> getapprovedbidsAsync(string biduserid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAppUserVehicleResult>> GetAppUserVehicleAsync(string userid, int? offset, int? fetchcount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAppUserVehicleDataResult>> GetAppUserVehicleDataAsync(string userid, int? offset, int? fetchcount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAppUserVehicleIdsResult>> GetAppUserVehicleIdsAsync(string userid, int? offset, int? fetchcount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAppUserVehicleInfoResult>> GetAppUserVehicleInfoAsync(string userid, int? offset, int? fetchcount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAppUserVehicleInfoDataResult>> GetAppUserVehicleInfoDataAsync(string userid, int? offset, int? fetchcount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAppUserVehicleInfoIdsResult>> GetAppUserVehicleInfoIdsAsync(string userid, int? offset, int? fetchcount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAppUserVehicleInfoIdsBySearchResult>> GetAppUserVehicleInfoIdsBySearchAsync(string userid, int? offset, int? fetchcount, string searchText, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAuctionEventsResult>> GetAuctionEventsAsync(int? RowNumfrom, int? RowNumto, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetBankKitTimeLineResult>> GetBankKitTimeLineAsync(string userid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetBIdhistroyResult>> GetBIdhistroyAsync(string username, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetBrandsByIDResult>> GetBrandsByIDAsync(string ids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getCityByIdResult>> getCityByIdAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getCityDetailsBYIDResult>> getCityDetailsBYIDAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getCompletercvecbidsResult>> getCompletercvecbidsAsync(string biduserid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetDealerAllOldvecResult>> GetDealerAllOldvecAsync(int? fromrow, int? torow, string opration, string userid, string opratiionquery, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getDealerBrandsResult>> getDealerBrandsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getdealerCategoryResult>> getdealerCategoryAsync(string dealerid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> GetDealersAsync(string searchtext, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetDealersCityBrandResult>> GetDealersCityBrandAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getdisticthomepagevehcileResult>> getdisticthomepagevehcileAsync(string searchtext, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetDistrictsByIDResult>> GetDistrictsByIDAsync(string ids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GeteventvecdetailsResult>> GeteventvecdetailsAsync(int? vid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GeteventvecimgResult>> GeteventvecimgAsync(int? vid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetfancyNumbers1Result>> GetfancyNumbers1Async(int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetfancyNumbersFilterResult>> GetfancyNumbersFilterAsync(int? fromrow, int? torow, int? cat, string search, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetfancyNumbersHomeFilterResult>> GetfancyNumbersHomeFilterAsync(int? fromrow, int? torow, int? cat, int? stateid, int? districtid, int? cityid, string search, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetfancyNumbersNewResult>> GetfancyNumbersNewAsync(int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetFreeOldVehicleDataResult>> GetFreeOldVehicleDataAsync(int? fromrow, int? torow, string search, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GethomepageVehcileResult>> GethomepageVehcileAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GethomepageVehcileListResult>> GethomepageVehcileListAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GethomepageVehcileListBydealerResult>> GethomepageVehcileListBydealerAsync(string userid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GethomePageVehicleResult>> GethomePageVehicleAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetHotedealResult>> GetHotedealAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetLiveauctionEventsResult>> GetLiveauctionEventsAsync(int? RowNumfrom, int? RowNumto, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getLiveEventsResult>> getLiveEventsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getLiveEvents1Result>> getLiveEvents1Async(string username, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getlostbidsResult>> getlostbidsAsync(string biduserid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getnearestvecResult>> getnearestvecAsync(double? latitude, double? longitude, int? fromrow, int? torow, double? lastdistance, string PostedByUserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getnearestvecFilterResult>> getnearestvecFilterAsync(double? latitude, double? longitude, int? fromrow, int? torow, double? lastdistance, string PostedByUserID, int? categoryID, int? modelID, int? brandID, int? varietid, int? cityID, int? stateID, int? districtID, int? priceFrom, int? priceTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getNerrestdealersResult>> getNerrestdealersAsync(string lat, string @long, int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getNerrestdealersbyBrandResult>> getNerrestdealersbyBrandAsync(string lat, string @long, int? fromrow, int? BrandID, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getNerrestloctionsResult>> getNerrestloctionsAsync(string lat, string @long, int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getNerrestloctionsnewResult>> getNerrestloctionsnewAsync(string lat, string @long, int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetNewVecResult>> GetNewVecAsync(int? vecid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getNewVehicleByBrandResult>> getNewVehicleByBrandAsync(int? SubAttributeID, int? AttributeID, int? catid, int? Brandid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getNewVehicleByFuleTypeResult>> getNewVehicleByFuleTypeAsync(int? SubAttributeID, int? AttributeID, int? catid, int? ModelID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getNewVehilcelistPricesResult>> getNewVehilcelistPricesAsync(string vecid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getNewVehilcePricesResult>> getNewVehilcePricesAsync(int? vecid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getNewVehilcePriceswithidResult>> getNewVehilcePriceswithidAsync(int? vecid, int? priceid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetOldVecimagesResult>> GetOldVecimagesAsync(string vecids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getoldvehcilebylocationResult>> getoldvehcilebylocationAsync(int? catid, string lat, string longi, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getpendingrcvecbidsResult>> getpendingrcvecbidsAsync(string biduserid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetPointDealersResult>> GetPointDealersAsync(int? fromrow, int? torow, string searchtext, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getPopularBrandsResult>> getPopularBrandsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetRTAOfficeAddressResult>> GetRTAOfficeAddressAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStatesByIDResult>> GetStatesByIDAsync(string ids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetSubDistrictsByIDResult>> GetSubDistrictsByIDAsync(string ids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getupcomingEventsResult>> getupcomingEventsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVarietsByIDResult>> GetVarietsByIDAsync(string ids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVarietswithPriceResult>> GetVarietswithPriceAsync(string Modelid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVarietswithPriceNewResult>> GetVarietswithPriceNewAsync(string Modelid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVechileByIDResult>> GetVechileByIDAsync(string ids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVechileModelByIDResult>> GetVechileModelByIDAsync(string ids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVechileSubTypeByIDResult>> GetVechileSubTypeByIDAsync(string ids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVechileSubTypesByIDResult>> GetVechileSubTypesByIDAsync(string ids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVechileTypesByIDResult>> GetVechileTypesByIDAsync(string ids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVecimagesResult>> GetVecimagesAsync(string vecids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVecPricesResult>> GetVecPricesAsync(string vecids, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVehcileAttributeWithValueResult>> GetVehcileAttributeWithValueAsync(int? vehicleId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetVehicleAttributeWithValueResult>> GetVehicleAttributeWithValueAsync(int? vehicleId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetventvecdetailsResult>> GetventvecdetailsAsync(int? eventid, string biduserid, int? vecid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<getwinbidsResult>> getwinbidsAsync(string biduserid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<homepageVehcilesResult>> homepageVehcilesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<homesildercatResult>> homesildercatAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<listNewuploadoldvehicleResult>> listNewuploadoldvehicleAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<listsimilerpricewiseoldvehicleResult>> listsimilerpricewiseoldvehicleAsync(int? price, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LiveactionVehicleDownloadResult>> LiveactionVehicleDownloadAsync(int? EventID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LiveBidsResult>> LiveBidsAsync(int? eventID, DateTime? updatetime, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NewSearchvecResult>> NewSearchvecAsync(string name, int? catid, int? subcatid, int? brandid, int? modelid, string price, int? year, int? varietid, string Fule, int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NewSearchvecListResult>> NewSearchvecListAsync(string name, int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NewSearchvecList1Result>> NewSearchvecList1Async(string name, int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NewSearchvecNEWResult>> NewSearchvecNEWAsync(string name, int? catid, int? subcatid, int? brandid, int? modelid, string price, int? year, int? varietid, string Fule, int? fromrow, int? torow, string upcoming, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NewSearchvecNEWListResult>> NewSearchvecNEWListAsync(string name, int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NewvehcileanylysisResult>> NewvehcileanylysisAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<oldvehcileanylysisResult>> oldvehcileanylysisAsync(string username, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<s_showhomepagesResult>> s_showhomepagesAsync(DateOnly? from, DateOnly? to, int? catID, int? StateID, int? DistrictID, int? CityID, int? CityMintid, int? CityMaxtid, string searchtxt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<s_showofferbidResult>> s_showofferbidAsync(DateOnly? from, DateOnly? to, int? catID, int? StateID, int? DistrictID, int? CityID, int? CityMintid, int? CityMaxtid, string searchtxt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_AspNetRolesResult>> Search_AspNetRolesAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_AspNetusersResult>> Search_AspNetusersAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_bankitUsersResult>> Search_bankitUsersAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_brandResult>> Search_brandAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_categoryResult>> Search_categoryAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_DistrictResult>> Search_DistrictAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_DistrictNameResult>> Search_DistrictNameAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_modelResult>> Search_modelAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_oldvehicle_ChassieNumberResult>> Search_oldvehicle_ChassieNumberAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_oldvehicle_nameResult>> Search_oldvehicle_nameAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_oldvehicle_RegisterNumerResult>> Search_oldvehicle_RegisterNumerAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_stateResult>> Search_stateAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_sub_categoryResult>> Search_sub_categoryAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_SubDistrictResult>> Search_SubDistrictAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Search_VarietResult>> Search_VarietAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SearchAllTablesResult>> SearchAllTablesAsync(string SearchStr, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SearchBidsResult>> SearchBidsAsync(int? SubCategoryID, int? BrandID, int? ModelID, int? VarietID, int? CityID, int? DistrictID, int? SubDistrictID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<searchCitiesResult>> searchCitiesAsync(string text, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<searchHomepageVehcileResult>> searchHomepageVehcileAsync(string txt, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SearchtxtResult>> SearchtxtAsync(string SearchText, int? ItemCount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SearchvecResult>> SearchvecAsync(string lat, string @long, string name, int? catid, int? subcatid, int? brandid, int? modelid, int? stateid, int? districtid, int? subdistrictid, string price, int? year, int? Bankit, int? Scarp, int? HotDeal, int? varietid, string Fule, int? fromrow, int? torow, string userid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Searchvec2Result>> Searchvec2Async(string lat, string @long, string name, int? catid, int? brandid, int? modelid, int? stateid, int? districtid, string price, int? year, int? varietid, string Fule, int? fromrow, int? torow, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<upcomingeactionVehicleDownloadResult>> upcomingeactionVehicleDownloadAsync(int? EventID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
